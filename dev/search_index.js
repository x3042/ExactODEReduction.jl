var documenterSearchIndex = {"docs":
[{"location":"guide/#Guide","page":"Guide","title":"Guide","text":"","category":"section"},{"location":"guide/","page":"Guide","title":"Guide","text":"Wowowow","category":"page"},{"location":"interface/#Interface","page":"Interface","title":"Interface","text":"","category":"section"},{"location":"interface/","page":"Interface","title":"Interface","text":"find_reductions","category":"page"},{"location":"interface/#ExactODEReduction.find_reductions","page":"Interface","title":"ExactODEReduction.find_reductions","text":"find_reductions(system; backend_algorithm)\n\nFinds reductions of the system corresponding to a Jordan-Hoelder filtration. This means that the reduction form a chain, and there are no extra intermediate reduction in this chain. In particular, if there exists at least one reduction, it will be found. Arguments:\n\nsystem is a list of the right-hand sides of the system, the i-th element is the derivative of the i-th variable in the corresponding polynomial ring\nbackend_algorithm is the linear algebra algorithm used. By default, invariant_subspace_1.\n\n\n\n\n\n","category":"function"},{"location":"interface/","page":"Interface","title":"Interface","text":"find_smallest_constrained_reduction","category":"page"},{"location":"interface/#ExactODEReduction.find_smallest_constrained_reduction","page":"Interface","title":"ExactODEReduction.find_smallest_constrained_reduction","text":"find_smallest_constrained_reduction(system, observables; backend_algorithm)\n\nFinds the best linear reduction of the system. If there exists a reduction, it will be found. Arguments:\n\nsystem is a list of the right-hand sides of the system, the i-th element is the derivative of the i-th variable in the corresponding polynomial ring\nobservables is a list of linear functions of initial variables desired to be preserved by reduction. Defaults to an empty list to find the most general reduction.\n\n\n\n\n\n","category":"function"},{"location":"interface/","page":"Interface","title":"Interface","text":"find_some_reduction","category":"page"},{"location":"interface/#ExactODEReduction.find_some_reduction","page":"Interface","title":"ExactODEReduction.find_some_reduction","text":"find_some_reduction(system; backend_algorithm)\n\nFinds a nontrivial linear reduction of the system. If there exists a reduction, it will be found. Arguments:\n\nsystem is a list of the right-hand sides of the system, the i-th element is the derivative of the i-th variable in the corresponding polynomial ring\n\n\n\n\n\n","category":"function"},{"location":"#ExactODEReduction.jl","page":"ExactODEReduction","title":"ExactODEReduction.jl","text":"","category":"section"},{"location":"","page":"ExactODEReduction","title":"ExactODEReduction","text":"The package ","category":"page"},{"location":"","page":"ExactODEReduction","title":"ExactODEReduction","text":"See Guide section for the short usage guide.","category":"page"}]
}
